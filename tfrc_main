;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; TINYFUGUE RC FILE
;;
;; $LastChangedBy: schrepfer $
;; $LastChangedDate: 2011-03-11 15:33:39 -0800 (Fri, 11 Mar 2011) $
;; $HeadURL: svn://wario.x.maddcow.us/projects/ZombiiTF/zombii/tfrc_main $
;;

;;
;; History size
;;

/set histsize=20000
/eval /histsize -l %{histsize}
/eval /histsize -g %{histsize}
/histsize -i 2000

;;
;; Some required global variables
;;

/def logs_dir = \
  /let _dir=$[strcat(ZOMBII, '/logs/', world_info('name'))]%; \
  /if ({#}) \
    /result strcat(_dir, '/', {*}, '.log')%; \
  /else \
    /result _dir%; \
  /endif

/def save_dir = \
  /let _dir=$[strcat(ZOMBII, '/save/', world_info('name'))]%; \
  /if ({#}) \
    /result strcat(_dir, '/', {*}, '.sav')%; \
  /else \
    /result _dir%; \
  /endif

/def trigs_dir = \
  /let _dir=$[strcat(ZOMBII, '/trigs')]%; \
  /if ({#}) \
    /result strcat(_dir, '/', {*}, '.tf')%; \
  /else \
    /result _dir%; \
  /endif

/def files_dir = \
  /let _dir=$[strcat(ZOMBII, '/files')]%; \
  /if ({#}) \
    /result strcat(_dir, '/', {*}, '.tf')%; \
  /else \
    /result _dir%; \
  /endif

/def scripts_dir = \
  /let _dir=$[strcat(ZOMBII, '/scripts')]%; \
  /if ({#}) \
    /result strcat(_dir, '/', {*})%; \
  /else \
    /result _dir%; \
  /endif

/def runs_dir = \
  /let _dir=$[strcat(ZOMBII, '/runs')]%; \
  /if ({#}) \
    /result strcat(_dir, '/', {*})%; \
  /else \
    /result _dir%; \
  /endif

;;
;; TF trig settings
;;

/set max_trig=5000
/set max_hook=5000
/set max_recur=1000
/set save_interval=15
/set warn_curly_re=off
/set warn_5keys=off
/set defcompile=on
/set oldslash=off
/set quiet=on

;;
;; Change to the right directory and fix paths
;;

/eval /cd %{ZOMBII}

/if (!strlen(TFPATH)) \
  /eval /set TFPATH=%{TFLIBDIR} $[trigs_dir()]%; \
/endif

/if (!strlen(PYTHONPATH)) \
  /eval /set PYTHONPATH=%{PYTHONPATH}:%{ZOMBII}%; \
/endif

;;
;; Auto-reconnect
;;

/def -Fp1 -ag -h'CONFAIL|DISCONNECT|CONFAIL' auto_reconnect = \
  /repeat -$[5 * (1 + (++connect_attempts / 50))] 1 /world %{1}

/def -Fp1 -h'CONNECT' connect = /set connect_attempts=0

/def reconnect = \
  /dc%; \
  /world $[world_info('name')]

;;
;; Key bindings
;;

/def key_up = /dokey searchb
/def key_down = /dokey searchf
/def key_left = /dokey left
/def key_right = /dokey right

/def key_crtl_up = /dokey recallb
/def key_ctrl_down = /dokey recallf

/def key_shift_up = !north
/def key_meta_up = /key_shift_up
/def key_esc_up = /key_shift_up
/def key_ctrl_up = /key_shift_up

/def key_shift_right = !east
/def key_meta_right = /key_shift_right
/def key_esc_right = /key_shift_right
/def key_ctrl_right = /key_shift_right

/def key_shift_down = !south
/def key_meta_down = /key_shift_down
/def key_esc_down = /key_shift_down
/def key_ctrl_down = /key_shift_down

/def key_shift_left = !west
/def key_meta_left = /key_shift_left
/def key_esc_left = /key_shift_left
/def key_ctrl_left = /key_shift_left

/def pass = /return

;;
;; Uptime
;;

/test tf_start_time := tf_start_time | time()

/def uptime = \
  /let _uptime=$[trunc(time() - tf_start_time)]%; \
  /result '$[_uptime/86400]d $[mod(_uptime/3600,24)]h $[mod(_uptime/60,60)]m $[mod(_uptime,60)]s'

;; vim: ft=tf
